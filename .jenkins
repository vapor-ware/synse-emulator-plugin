#!/usr/bin/env groovy

pipeline {

  agent {
    label 'golang-next'
  }

  environment {
    IMAGE_NAME = 'vaporio/emulator-plugin'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Lint') {
      steps {
        container('golang') {
          sh 'golint -set_exit_status ./pkg/...'
        }
      }
    }

    stage('Snapshot Build') {
      agent {
        label 'golang-alpha'
      }
      steps {
        container('golang') {
          sh 'goreleaser release --debug --snapshot --skip-publish --rm-dist'
        }
      }
    }

    stage('Publish Latest') {
      when {
        branch 'master'
      }
      agent {
        label 'golang-alpha'
      }
      steps {
        container('golang') {
          withDockerRegistry(registry: [credentialsId: 'vio-docker-hub']) {
            sh 'docker push ${IMAGE_NAME}:latest'
          }
        }
      }
    }

    stage('Tagged Release') {
      when {
        buildingTag()
      }
      agent {
        label 'golang-alpha'
      }
      environment {
        GITHUB_TOKEN = credentials('vio-bot-gh-token')
      }
      steps {
        container('golang') {
          withDockerRegistry(registry: [credentialsId: 'vio-docker-hub']) {
            sh 'goreleaser release --debug --rm-dist'
          }
        }
      }
    }
  }
}
